<?xml version="1.0" encoding="utf-8"?>


<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.crypt.password"><title>Password secure storing</title>
    

    <para>
        The <classname>Zend\Crypt\Password</classname> store a user's password in a secure way using dedicated adapters
        like the <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://en.wikipedia.org/wiki/Bcrypt">bcrypt</link> algorithm.
    </para>

    <para>
        In the example below we show hot to use the bcrypt algorithm to store a user's password:
    </para>

    <programlisting language="php"><![CDATA[
use Zend\Crypt\Password\Bcrypt;

$bcrypt = new Bcrypt()
$securePass = $bcrypt->create('user password');
]]></programlisting>

    <para>
        The output of the <methodname>create()</methodname> method is the encrypted password. This value can be stored in a repository, like a database
        instead of use alternative mechanism like MD5 or MD5 + salt that are not considered secure anymore (<link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://codahale.com/how-to-safely-store-a-password/">read this post to know why</link>).
    </para>

    <para>
        To verify if a given password is valid against a bcrypt value you can use the <methodname>verify()</methodname> method.
        Below is reported an example:
    </para>

    <programlisting language="php"><![CDATA[
use Zend\Crypt\Password\Bcrypt;

$bcrypt = new Bcrypt();
$securePass = 'the bcrypt value stored somewhere';
$password = 'the password to check';

if ($bcrypt->verify($password, $bcrypt)) {
    echo "The password is correct! \n";
} else {
    echo "The password is NOT correct.\n";
}
]]></programlisting>

    <para>
        By default the <classname>Zend\Crypt\Password\Bcrypt</classname> class uses a value of 14 for the cost parameter of the bcrypt.
        This is an importan value for the security of the bcrypt algorithm. The cost parameter is an integer value between 4 to 33.
        Greater values means more execution time for the bcrypt that means more security against brute force or dictionary attacks.
        As for the PBKDF2 algorithm there is not a fixed value for that parameter that can be considered secure. The default value
        of 14 is about 1 second of computation using an Intel Core i5-2500 CPU at 3.3 Ghz that can be considered secure.
    </para>

    <para>
        If you want to change the cost parameter of the bcrypt algorithm you can use the <methodname>setCost()</methodname> method.
    </para>

</section>

