<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
<section 
    xmlns="http://docbook.org/ns/docbook" version="5.0" 
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xml:id="zend.form.intro">
    <title>Zend\Form</title>

    <para>
        <classname>Zend\Form</classname> is intended primarily as a bridge between your domain
        models and the View Layer. It composes a thin layer of objects representing form elements,
        an <link linkend="zend.input-filter">InputFilter</link>, and a small number of methods for
        binding data to and from the form and attached objects.
    </para>

    <para>
        The component consists of:
    </para>

    <itemizedlist>
        <listitem>
            <para>
                <classname>Elements</classname>, which simply consist of a name and attributes.
            </para>
        </listitem>

        <listitem>
            <para>
                <classname>Fieldsets</classname>, which extend from <classname>Elements</classname>,
                but allow composing other fieldsets and elements.
            </para>
        </listitem>

        <listitem>
            <para>
                <classname>Forms</classname>, which extend from <classname>Fieldsets</classname>
                (and thus <classname>Elements</classname>), provide data and object binding, and
                compose <classname>InputFilters</classname>. Data binding is done via <classname
                    linkend="zend.stdlib.hydrator">Zend\Stdlib\Hydrator</classname>.
            </para>
        </listitem>
    </itemizedlist>

    <para>
        To facilitate usage with the view layer, the <classname>Zend\Form</classname> component also
        aggregates a number of form-specific view helpers. These accept elements, fieldsets, and/or
        forms, and use the attributes they compose to render markup.
    </para>

    <para>
        A small number of specialized elements are provided for accomplishing application-centric
        tasks. These include the <classname>Csrf</classname> element, used to prevent Cross Site
        Request Forgery attacks, and the <classname>Captcha</classname> element, used to display and
        validate <link linkend="zend.captcha">CAPTCHAs</link>.
    </para>

    <para>
        Finally, a <classname>Factory</classname> is provided to facilitate creation of elements,
        fieldsets, forms, and the related input filter. The default <classname>Form</classname>
        implementation is backed by a factory to facilitate extension and ease the process of form
        creation.
    </para>
</section>
