<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.cache.storage.plugin">
    <info>
        <title>Zend\Cache\Storage\Plugin</title>
    </info>

    <section xml:id="zend.cache.storage.plugin.intro">
        <info>
            <title>Overview</title>
        </info>

        <para>
            Cache storage plug-ins are objects to add missing functionalities
            or to change influences of a storage adapter. This can be very
            helpful implement caching into an application.
        </para>

        <para>
            The plug-ins listen to events the adapter triggers and can change
            called method arguments (*.post - events), skipping and directly
            return a result (using <methodname>stopPropagation</methodname>),
            changing the result (with <methodname>setResult</methodname> of
            <classname>Zend\Cache\Storage\PostEvent</classname>) and catching
            exceptions (with <classname>Zend\Cache\Storage\ExceptionEvent</classname>).
        </para>

    </section>

    <section xml:id="zend.cache.storage.plugin.quick-start">
        <info>
            <title>Quick Start</title>
        </info>

        <para>
            Storage plug-ins can either be created from <classname>Zend\Cache\StorageFactory</classname>
            with the <methodname>pluginFactory</methodname>, or by simply instantiating
            one of the <classname>Zend\Cache\Storage\Plugin\*</classname>classes. 
        </para>
        
        <para>
            To make live easier the <classname>Zend\Cache\StorageFactory</classname>
            comes with a method <methodname>factory</methodname> to create an adapter
            and creating/adding all given plug-ins at once.
        </para>

        <programlisting language="php"><![CDATA[
use Zend\Cache\StorageFactory;

$cache = StorageFactory::factory(array(
    'adapter' => 'filesystem',
    'plugins' => array('serializer'),
));

// OR, the completely equivalent

$cache  = StorageFactory::adapterFactory('filesystem');
$plugin = StorageFactory::pluginFactory('serializer');
$cache->addPlugin($plugin);

// OR, the completely equivalent

$cache  = new Zend\Cache\Storage\Adapter\Filesystem();
$plugin = new Zend\Cache\Storage\Plugin\Serializer();
$cache->addPlugin($plugin);

]]></programlisting>

    </section>

    <section xml:id="zend.cache.storage.plugin.options">
        <info>
            <title>Configuration Options</title>
        </info>

        <variablelist>
            <title/>
        </variablelist>
    </section>

    <section xml:id="zend.cache.storage.plugin.methods">
        <info>
            <title>Available Methods</title>
        </info>

        <variablelist>
            <varlistentry xml:id="zend.cache.storage.plugin.methods.__construct">
                <term>
                    <methodsynopsis>
                        <methodname>__construct</methodname>
                        <methodparam>
                            <funcparams>array|Traversable $options = array (
)</funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Constructor</para>
                    <para></para>
                    <para>Returns void</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.cache.storage.plugin.methods.set-options">
                <term>
                    <methodsynopsis>
                        <methodname>setOptions</methodname>
                        <methodparam>
                            <funcparams>array|Traversable $options</funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Set options</para>
                    <para></para>
                    <para>Returns Zend\Cache\Storage\Plugin</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.cache.storage.plugin.methods.get-options">
                <term>
                    <methodsynopsis>
                        <methodname>getOptions</methodname>
                        <methodparam>
                            <funcparams></funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Get options</para>
                    <para></para>
                    <para>Returns array</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.event-manager.listener-aggregate.methods.attach">
                <term>
                    <methodsynopsis>
                        <methodname>attach</methodname>
                        <methodparam>
                            <funcparams>EventCollection $events</funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Attach one or more listeners</para>
                    <para></para>
                    <para>Returns void</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.event-manager.listener-aggregate.methods.detach">
                <term>
                    <methodsynopsis>
                        <methodname>detach</methodname>
                        <methodparam>
                            <funcparams>EventCollection $events</funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Detach all previously attached listeners</para>
                    <para></para>
                    <para>Returns void</para>
                </listitem>
            </varlistentry>

        </variablelist>
    </section>

    <section xml:id="zend.cache.storage.plugin.examples">
        <info>
            <title>TODO: Examples</title>
        </info>

    </section>
</section>
