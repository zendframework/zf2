<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.i18n.view.helper.date-format"><title>DateFormat Helper</title>

	<para>
		The <classname>DateFormat</classname> view helper can be used to simplify rendering
		of localized date/time values. It acts as a wrapper for the <classname>IntlDateFormatter</classname>
		class within the Internationalization extension (Intl).
	</para>

	<example xml:id="zend.i18n.view.helper.date-format.usage">
		<title>Basic Usage of DateFormat</title>
    	<programlisting language="php"><![CDATA[
// Within your view

// Date and Time
echo $this->dateFormat(
    new DateTime(),
    IntlDateFormatter::MEDIUM, // date
    IntlDateFormatter::MEDIUM, // time
    "en_US"
);
// This returns: "Jul 2, 2012 6:44:03 PM"

// Date Only
echo $this->dateFormat(
    new DateTime(),
    IntlDateFormatter::LONG, // date
    IntlDateFormatter::NONE, // time
    "en_US"
);
// This returns: "July 2, 2012"

// Time Only
echo $this->dateFormat(
    new DateTime(),
    IntlDateFormatter::NONE,  // date
    IntlDateFormatter::SHORT, // time
    "en_US"
);
// This returns: "6:44 PM"
]]></programlisting>

		<para>
			<methodname>dateFormat(mixed $date [, int $dateType [, int $timeType [, string $locale ]]])</methodname>
		</para>

		<itemizedlist>
	        <listitem>
	            <para>
	                <varname>$date</varname> : The value to format. This may be a
	                <classname>DateTime</classname> object, an integer representing a Unix timestamp
	                value or an array in the format output by <function>localtime()</function>.
	            </para>
	        </listitem>
	        <listitem>
	            <para>
	                <varname>$dateType</varname> : (Optional) Date type to use (none, short, medium, long, full).
	                This is one of the <link xmlns:xlink="http://www.w3.org/1999/xlink"
					xlink:href="http://us.php.net/manual/en/class.intldateformatter.php#intl.intldateformatter-constants"
					>IntlDateFormatter constants</link>. Defaults to <varname>IntlDateFormatter::NONE</varname>.
	            </para>
	        </listitem>
	        <listitem>
	            <para>
	                <varname>$timeType</varname> : (Optional) Time type to use (none, short, medium, long, full).
	                This is one of the <link xmlns:xlink="http://www.w3.org/1999/xlink"
					xlink:href="http://us.php.net/manual/en/class.intldateformatter.php#intl.intldateformatter-constants"
					>IntlDateFormatter constants</link>. Defaults to <varname>IntlDateFormatter::NONE</varname>.
	            </para>
	        </listitem>
	        <listitem>
	            <para>
	                <varname>$locale</varname> : (Optional) Locale in which the date would be formatted (locale name, e.g. en_US).
	                If unset, it will use the default locale (<classname>Locale::getDefault()</classname>)
	            </para>
	        </listitem>
		</itemizedlist>

	</example>

	<example xml:id="zend.i18n.view.helper.date-format.setter-usage">
		<title>DateFormat Setters</title>
		<para>
			The <varname>$locale</varname> option can be set prior to formatting
			with the <methodname>setLocale()</methodname> method
			and will be applied each time the helper is used.
		</para>

		<para>
			By default, the system's default timezone will be used when formatting.
			This overrides any timezone that may be set inside a DateTime object.
			To change the timezone when formatting, use the
			<methodname>setTimezone</methodname> method.
		</para>

	    <programlisting language="php"><![CDATA[
// Within your view
$this->plugin("dateFormat")->setTimezone("America/New_York")->setLocale("en_US");

echo $this->dateFormat(new DateTime(), IntlDateFormatter::MEDIUM);  // "Jul 2, 2012"
echo $this->dateFormat(new DateTime(), IntlDateFormatter::SHORT);   // "7/2/12"
]]></programlisting>

	</example>
</section>
