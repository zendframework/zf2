<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.filter.set.stringtoupper"><title>StringToUpper</title>
    

    <para>
        This filter converts any input to be uppercased.
    </para>

    <section xml:id="zend.filter.set.stringtoupper.options"><title>Supported options for Zend_Filter_StringToUpper</title>
        

        <para>
            The following options are supported for
            <classname>Zend_Filter_StringToUpper</classname>:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <emphasis><property>encoding</property></emphasis>: This option can be used to
                    set an encoding which has to be used.
                </para>
            </listitem>
        </itemizedlist>
    </section>

    <section xml:id="zend.filter.set.stringtoupper.basic"><title>Basic usage</title>
        

        <para>
            This is a basic example for using the <classname>StringToUpper</classname> filter:
        </para>

        <programlisting language="php"><![CDATA[
$filter = new Zend_Filter_StringToUpper();

print $filter->filter('Sample');
// returns "SAMPLE"
]]></programlisting>

    </section>

    <section xml:id="zend.filter.set.stringtoupper.encoding"><title>Different encoded strings</title>
        

        <para>
            Like the <classname>StringToLower</classname> filter, this filter handles
            only characters from the actual locale of your server. Using different
            character sets works the same as with <classname>StringToLower</classname>.
        </para>

        <programlisting language="php"><![CDATA[
$filter = new Zend_Filter_StringToUpper(array('encoding' => 'UTF-8'));

// or do this afterwards
$filter->setEncoding('ISO-8859-1');
]]></programlisting>
    </section>
</section>
