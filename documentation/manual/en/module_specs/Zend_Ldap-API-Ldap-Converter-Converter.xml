<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0"
         xml:id="zend.ldap.api.reference.zend-ldap-converter-converter">
    <title>Zend\Ldap\Converter\Converter</title>
    <para>
        <classname>Zend\Ldap\Converter\Converter</classname>
        is a helper class providing only static methods to manipulate arrays suitable to the data format required by the
        <acronym>LDAP</acronym>
        server.
        <acronym>PHP</acronym>
        data types are converted the following way:
    </para>

    <variablelist>
        <varlistentry>
            <term>
                <code>string</code>
            </term>
            <listitem>
                <para>No conversion will be done.</para>
            </listitem>
        </varlistentry>

        <varlistentry>
            <term>
                <code>integer</code>
                and
                <code>float</code>
            </term>
            <listitem>
                <para>The value will be converted to a string.</para>
            </listitem>
        </varlistentry>

        <varlistentry>
            <term>
                <code>boolean</code>
            </term>
            <listitem>
                <para>
                    <constant>TRUE</constant>
                    will be converted to
                    <emphasis>'<constant>TRUE</constant>'
                    </emphasis>
                    and
                    <constant>FALSE</constant>
                    to
                    <emphasis>'<constant>FALSE</constant>'
                    </emphasis>
                </para>
            </listitem>
        </varlistentry>

        <varlistentry>
            <term>
                <code>object</code>
                and
                <code>array</code>
            </term>
            <listitem>
                <para>The value will be converted to a string by using
                    <methodname>serialize()</methodname>.
                </para>
            </listitem>
        </varlistentry>

        <varlistentry>
            <term>
                <code>Date/Time</code>
            </term>
            <listitem>
                <para>The value will be converted to a string with the following
                    <methodname>date()</methodname>
                    format
                    <code>YmdHisO</code>, UTC timezone (+0000) will be replaced with a<code>Z</code>.
                    For example
                    <code>01-30-2011 01:17:32 PM GMT-6</code>
                    will be
                    <code>20113001131732-0600</code>
                    and
                    <code>30-01-2012 15:17:32 UTC</code>
                    will be
                    <code>20120130151732Z</code>
                </para>
            </listitem>
        </varlistentry>

        <varlistentry>
            <term>
                <code>resource</code>
            </term>
            <listitem>
                <para>If a
                    <code>stream</code>
                    resource is given, the data will be
                    fetched by calling
                    <methodname>stream_get_contents()</methodname>.
                </para>
            </listitem>
        </varlistentry>

        <varlistentry>
            <term>others</term>
            <listitem>
                <para>All other data types (namely non-stream resources) will be
                    omitted.
                </para>
            </listitem>
        </varlistentry>
    </variablelist>

    <para>On reading values the following conversion will take place:</para>

    <variablelist>
        <varlistentry>
            <term>
                <emphasis>'<constant>TRUE</constant>'
                </emphasis>
            </term>
            <listitem>
                <para>Converted to<constant>TRUE</constant>.
                </para>
            </listitem>
        </varlistentry>

        <varlistentry>
            <term>
                <emphasis>'<constant>FALSE</constant>'
                </emphasis>
            </term>
            <listitem>
                <para>Converted to<constant>FALSE</constant>.
                </para>
            </listitem>
        </varlistentry>

        <varlistentry>
            <term>others</term>
            <listitem>
                <para>All other strings won't be automatically converted and are passed
                    as they are.
                </para>
            </listitem>
        </varlistentry>
    </variablelist>

    <table xml:id="zend.ldap.api.reference.zend-ldap-converter-converter.table">
        <title>Zend\Ldap\Converter\Converter API</title>
        <tgroup cols="2">
            <thead>
                <row>
                    <entry>Method</entry>
                    <entry>Description</entry>
                </row>
            </thead>

            <tbody>
                <row>
                    <entry>
                        <emphasis>
                            <code>string ascToHex32(string $string)</code>
                        </emphasis>
                    </entry>

                    <entry>
                        Convert all Ascii characters with decimal value less than 32 to hexadecimal value.
                    </entry>
                </row>

                <row>
                    <entry>
                        <emphasis>
                            <code>string hex32ToAsc(string $string)</code>
                        </emphasis>
                    </entry>

                    <entry>
                        Convert all hexadecimal characters by his Ascii value.
                    </entry>
                </row>

                <row>
                    <entry>
                        <emphasis>
                            <code>string|null toLdap(mixed $value, int $type)</code>
                        </emphasis>
                    </entry>

                    <entry>
                        Converts a
                        <acronym>PHP</acronym>
                        data type into its
                        <acronym>LDAP</acronym>
                        representation.
                        <varname>$type</varname>
                        argument is used to set the conversion method by default
                        <constant>Converter::STANDARD</constant>
                        where the function will try to guess the conversion method to use, others possibilities are
                        <constant>Converter::BOOLEAN</constant>
                        and
                        <constant>Converter::GENERALIZED_TIME</constant>
                        See introduction for details.
                    </entry>
                </row>

                <row>
                    <entry>
                        <emphasis>
                            <code>mixed fromLdap(string $value, int $type, boolean $dateTimeAsUtc)</code>
                        </emphasis>
                    </entry>

                    <entry>
                        Converts an
                        <acronym>LDAP</acronym>
                        value into its
                        <acronym>PHP</acronym>
                        data type. See introduction and
                        <methodname>toLdap()</methodname>
                        and
                        <methodname>toLdapDateTime()</methodname>
                        for details.
                    </entry>
                </row>

                <row>
                    <entry>
                        <emphasis>
                            <code>string|null
                                toLdapDateTime(integer|string|DateTime|Zend\Date\Date $date, boolean $asUtc)
                            </code>
                        </emphasis>
                    </entry>

                    <entry>
                        Converts a timestamp, a DateTime Object, a string that is parseable by
                        <methodname>strtotime()</methodname>
                        or a Zend\Date\Date into its
                        <acronym>LDAP</acronym>
                        date/time
                        representation. If
                        <varname>$asUtc</varname>
                        is
                        <constant>TRUE</constant>
                        (
                        <constant>FALSE</constant>
                        by default) the resulting
                        <acronym>LDAP</acronym>
                        date/time string will be in<acronym>UTC</acronym>,
                        otherwise a local date/time string will be returned.
                    </entry>
                </row>

                <row>
                    <entry>
                        <emphasis>
                            <code>DateTime
                                fromLdapDateTime(string $date, boolean $asUtc)
                            </code>
                        </emphasis>
                    </entry>

                    <entry>
                        Converts
                        <acronym>LDAP</acronym>
                        date/time representation into a PHP
                        <classname>DateTime</classname>
                        object.
                    </entry>
                </row>
                <row>
                    <entry>
                        <emphasis>
                            <code>string toLdapBoolean(boolean|integer|string $value)
                            </code>
                        </emphasis>
                    </entry>

                    <entry>
                        Converts a
                        <acronym>PHP</acronym>
                        data type into its
                        <acronym>LDAP</acronym>
                        boolean representation.
                        By default always return
                        <emphasis>'<constant>FALSE</constant>'
                        </emphasis>
                        except if the value is
                        <emphasis>
                            <constant>true</constant>
                        </emphasis>
                        ,
                        <emphasis>'<constant>true</constant>'
                        </emphasis>
                        or
                        <emphasis>
                            <constant>1</constant>
                        </emphasis>
                    </entry>
                </row>

                <row>
                    <entry>
                        <emphasis>
                            <code>boolean
                                fromLdapBoolean(string $value)
                            </code>
                        </emphasis>
                    </entry>

                    <entry>
                        Converts
                        <acronym>LDAP</acronym>
                        boolean representation into a PHP
                        <type>boolean</type>
                        data type.
                    </entry>
                </row>

                <row>
                    <entry>
                        <emphasis>
                            <code>string toLdapSerialize(mixed $value)
                            </code>
                        </emphasis>
                    </entry>

                    <entry>
                        The value will be converted to a string by using
                        <methodname>serialize()</methodname>.
                    </entry>
                </row>

                <row>
                    <entry>
                        <emphasis>
                            <code>mixed
                                fromLdapUnserialize(string $value)
                            </code>
                        </emphasis>
                    </entry>

                    <entry>
                        The value will be converted from a string by using
                        <methodname>unserialize()</methodname>.
                    </entry>
                </row>
            </tbody>
        </tgroup>
    </table>
</section>
