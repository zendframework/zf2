<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.i18n.view.helper.translate-plural"><title>TranslatePlural Helper</title>

	<para>
		The <classname>TranslatePlural</classname> view helper can be used to
		translate words which take into account numeric meanings. English,
		for example, has a singular definition of "car", for one car.
		And has the plural definition, "cars", meaning zero "cars" or
		more than one car. Other languages like Russian or Polish have more
		plurals with different rules.
	</para>

	<para>
		The viewhelper acts as a wrapper for the
		<classname>Zend\I18n\Translator\Translator</classname> class.
	</para>

	<example xml:id="zend.i18n.view.helper.translate-plural.setup">
		<title>TranslatePlural Setup</title>

		<para>
			Before using the <classname>TranslatePlural</classname> view helper,
			you must have first created a <classname>Translator</classname> object
			and have attached it to the view helper.
			If you use the <classname>Zend\I18n\Translator\TranslatorServiceFactory</classname>
			to create your <classname>Translator</classname> object, this will be
			done automatically for you.
		</para>

		<para>
			If you are not using the <classname>TranslatorServiceFactory</classname>,
			then you will need to manually attach your
			<classname>Translator</classname> object, such as:
		</para>
		<programlisting language="php"><![CDATA[
// Somewhere early in the process...
$serviceLocator->get('ViewHelperManager')->get('translateplural')->setTranslator($translator);
]]></programlisting>
	</example>

	<example xml:id="zend.i18n.view.helper.translate-plural.usage">
		<title>Basic Usage of TranslatePlural</title>

    	<programlisting language="php"><![CDATA[
// Within your view
echo $this->translatePlural("car", "cars", $num);

// Use a custom domain
echo $this->translatePlural("monitor", "monitors", $num, "customDomain");

// Change locale
echo $this->translate("locale", "locales", $num, "default", "de_DE");
]]></programlisting>

		<para>
			<methodname>translatePlural(string $singular, string $plural, int $number [, string $textDomain [, string $locale ]])</methodname>
		</para>

		<itemizedlist>
	        <listitem>
	            <para>
	                <varname>$singular</varname> : The singular message to be translated.
	            </para>
	        </listitem>
	        <listitem>
	            <para>
	                <varname>$plural</varname> : The plural message to be translated.
	            </para>
	        </listitem>
	        <listitem>
	            <para>
	                <varname>$number</varname> : The number to evaluate and determine which message to use.
	            </para>
	        </listitem>
	        <listitem>
	            <para>
	                <varname>$textDomain</varname> : (Optional) The text domain where this translation lives.
	                Defaults to the value "default".
	            </para>
	        </listitem>
	        <listitem>
	            <para>
	                <varname>$locale</varname> : (Optional) Locale in which the message would be translated (locale name, e.g. en_US).
	                If unset, it will use the default locale (<classname>Locale::getDefault()</classname>)
	            </para>
	        </listitem>
		</itemizedlist>

	</example>

</section>
