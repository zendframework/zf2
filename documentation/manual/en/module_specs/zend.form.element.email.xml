<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0"
    xml:id="zend.form.element.email">
    <title>Zend\Form\Element\Email</title>

    <para>
        The <classname>Email</classname> element is meant to be paired with the
        <classname>Zend/Form/View/Helper/FormEmail</classname> for
        <link xmlns:xlink="http://www.w3.org/1999/xlink"
        xlink:href="http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#e-mail-state-(type=email)"
        >HTML5 inputs with type email</link>.
        This element adds filters and validators to it's input filter specification
        in order to validate <link xmlns:xlink="http://www.w3.org/1999/xlink"
        xlink:href="http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address">
        HTML5 valid email address</link> on the server.
    </para>

    <example xml:id="zend.form.element.email.usage">
        <title>Basic Usage of Zend\Form\Element\Email</title>

        <para>
            This element automatically adds a <varname>"type"</varname>
            attribute of value <varname>"email"</varname>.
        </para>

        <programlisting language="php"><![CDATA[
use Zend\Form\Element;
use Zend\Form\Form;

$form = new Form('my-form');

// Single email address
$email = new Element\Email('email');
$email->setLabel('Email Address')
$form->add($email);

// Comma separated list of emails
$emails = new Element\Email('emails');
$emails
    ->setLabel('Email Addresses')
    ->setAttribute('multiple', true);
$form->add($emails);
]]></programlisting>

        <note>
            <para>
                Note: the <varname>multiple</varname> attribute should be set prior
                to calling Zend\Form::prepare(). Otherwise, the default input
                specification for the element may not contain the correct validation rules.
            </para>
        </note>
    </example>

    <section xml:id="zend.form.element.email.methods">
        <title>Available Methods</title>

        <para>
            The following methods are in addition to the inherited
            <link linkend="zend.form.element.methods">methods of
            <classname>Zend\Form\Element</classname></link>.
        </para>

        <variablelist>
            <varlistentry xml:id="zend.form.element.email.methods.get-input-specification">
                <term>getInputSpecification</term>
                <listitem>
                    <methodsynopsis>
                        <methodname>getInputSpecification</methodname>
                        <void/>
                    </methodsynopsis>
                    <para>
                        Returns a input filter specification, which includes
                        a <classname>Zend\Filter\StringTrim</classname> filter,
                        and a validator based on the <varname>multiple</varname>
                        attribute.
                    </para>
                    <para>
                        If the <varname>multiple</varname> attribute is unset or false,
                        a <classname>Zend\Validator\Regex</classname> validator
                        will be added to validate a single email address.
                    </para>
                    <para>
                        If the <varname>multiple</varname> attribute is true,
                        a <classname>Zend\Validator\Explode</classname> validator
                        will be added to ensure the input string value is split by commas before
                        validating each email address with <classname>Zend\Validator\Regex</classname>.
                    </para>
                    <para>Returns array</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </section>

</section>
