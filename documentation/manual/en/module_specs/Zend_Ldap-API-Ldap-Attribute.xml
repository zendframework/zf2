<?xml version="1.0" encoding="utf-8"?>

<section xmlns="http://docbook.org/ns/docbook" version="5.0"
         xml:id="zend.ldap.api.reference.zend-ldap-attribute"><title>Zend\Ldap\Attribute</title>

    <para>
        <classname>Zend\Ldap\Attribute</classname> is a helper class providing only static
        methods to manipulate arrays suitable to the structure used in
        <classname>Zend\Ldap\Ldap</classname> data modification methods and to the data format required
        by the <acronym>LDAP</acronym> server. <acronym>PHP</acronym> data types are converted using
        <classname>Zend\Ldap\Converter\Converter</classname> methods.
    </para>

    <table xml:id="zend.ldap.api.reference.zend-ldap-attribute.table"><title>Zend\Ldap\Attribute API</title>
        <tgroup cols="2">
            <thead>
                <row>
                    <entry>Method</entry>
                    <entry>Description</entry>
                </row>
            </thead>

            <tbody>
                <row>
                    <entry>
                        <emphasis><code>void setAttribute(array &amp;$data, string
                        $attribName, mixed $value, boolean $append)</code>
                        </emphasis>
                    </entry>

                    <entry>
                        Sets the attribute <varname>$attribName</varname> in
                        <varname>$data</varname> to the value <varname>$value</varname>. If
                        <varname>$append</varname> is <constant>TRUE</constant>
                        (<constant>FALSE</constant> by default) <varname>$value</varname> will be
                        appended to the attribute. <varname>$value</varname> can be a scalar value
                        or an array of scalar values. Conversion will take place.
                    </entry>
                </row>

                <row>
                    <entry>
                        <emphasis><code>array|mixed getAttribute(array $data,
                        string $attribName, integer|null $index)</code> </emphasis>
                    </entry>

                    <entry>
                        Returns the attribute <varname>$attribName</varname> from
                        <varname>$data</varname>. If <varname>$index</varname> is
                        <constant>NULL</constant> (default) an array will be returned containing all
                        the values for the given attribute. An empty array will be returned if the
                        attribute does not exist in the given array. If an integer index is
                        specified the corresponding value at the given index will be
                        returned. If the index is out of bounds, <constant>NULL</constant> will be
                        returned. Conversion will take place.
                    </entry>
                </row>

                <row>
                    <entry>
                        <emphasis><code>boolean attributeHasValue(array &amp;$data,
                        string $attribName, mixed|array $value)</code> </emphasis>
                    </entry>

                    <entry>
                        Checks if the attribute <varname>$attribName</varname> in
                        <varname>$data</varname> has the value(s) given in
                        <varname>$value</varname>. The method returns <constant>TRUE</constant> only
                        if all values in <varname>$value</varname> are present in the attribute.
                        Comparison is done strictly (respecting the data type).
                    </entry>
                </row>

                <row>
                    <entry>
                        <emphasis><code>void removeDuplicatesFromAttribute(array
                        &amp;$data, string $attribName)</code> </emphasis>
                    </entry>

                    <entry>
                        Removes all duplicates from the attribute
                        <varname>$attribName</varname> in <varname>$data</varname>.
                    </entry>
                </row>

                <row>
                    <entry>
                        <emphasis><code>void removeFromAttribute(array &amp;$data,
                        string $attribName, mixed|array $value)</code> </emphasis>
                    </entry>

                    <entry>
                        Removes the value(s) given in <varname>$value</varname> from
                        the attribute <varname>$attribName</varname> in
                        <varname>$data</varname>.
                    </entry>
                </row>

                <row>
                    <entry>
                        <emphasis><code>void setPassword(array &amp;$data, string
                        $password, string $hashType, string $attribName)</code>
                        </emphasis>
                    </entry>

                    <entry>
                        Sets a <acronym>LDAP</acronym> password for the attribute
                        <varname>$attribName</varname> in <varname>$data</varname>.
                        <varname>$attribName</varname> defaults to <code>'userPassword'</code>
                        which is the standard password attribute. The password hash can be
                        specified with <varname>$hashType</varname>. The default value here is
                        <constant>Zend\Ldap\Attribute::PASSWORD_HASH_MD5</constant> with
                        <constant>Zend\Ldap\Attribute::PASSWORD_HASH_SHA</constant> as the other
                        possibility.
                    </entry>
                </row>

                <row>
                    <entry>
                        <emphasis><code>string createPassword(string $password,
                        string $hashType)</code> </emphasis>
                    </entry>

                    <entry>
                        Creates a <acronym>LDAP</acronym> password. The password hash can be
                        specified with <varname>$hashType</varname>. The default value here is
                        <constant>Zend\Ldap\Attribute::PASSWORD_HASH_MD5</constant> with
                        <constant>Zend\Ldap\Attribute::PASSWORD_HASH_SHA</constant> as the other
                        possibility.
                    </entry>
                </row>

                <row>
                    <entry>
                        <emphasis><code>void setDateTimeAttribute(array &amp;$data,
                        string $attribName, integer|array $value, boolean $utc, boolean
                        $append)</code> </emphasis>
                    </entry>

                    <entry>
                        Sets the attribute <varname>$attribName</varname> in
                        <varname>$data</varname> to the date/time value <varname>$value</varname>.
                        if <varname>$append</varname> is <constant>TRUE</constant>
                        (<constant>FALSE</constant> by default) <varname>$value</varname> will be
                        appended to the attribute. <varname>$value</varname> can be an integer value
                        or an array of integers. Date-time-conversion according to
                        <methodname>Zend\Ldap\Converter\Converter::toLdapDateTime()</methodname>
                        will take place.
                    </entry>
                </row>

                <row>
                    <entry>
                        <emphasis><code>array|integer getDateTimeAttribute(array
                        $data, string $attribName, integer|null $index)</code>
                        </emphasis>
                    </entry>

                    <entry>
                        Returns the date/time attribute <varname>$attribName</varname>
                        from <varname>$data</varname>. If <varname>$index</varname> is
                        <constant>NULL</constant> (default) an array will be returned containing
                        all the date/time values for the given attribute. An empty array
                        will be returned if the attribute does not exist in the given
                        array. If an integer index is specified the corresponding date/time
                        value at the given index will be returned. If the index is out of
                        bounds, <constant>NULL</constant> will be returned. Date-time-conversion
                        according to
                        <methodname>Zend\Ldap\Converter\Converter::fromLdapDateTime()</methodname>
                        will take place.
                    </entry>
                </row>
            </tbody>
        </tgroup>
    </table>
</section>
